name: Create Release and Upload Asset
on: [push] 

jobs:
  build_and_release:
    name: Increment Version, Create Tag and Release with Asset
    runs-on: ubuntu-latest
    steps:
    #
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check for update level from commit message
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: regex-match
        with:
          text: ${{ github.event.head_commit.message }}
          regex: '\[(bug|feature|major)\]'

      - name: Find tag version number
        uses: salsify/action-detect-and-tag-new-version@v2
        id: tag_version
        with:
          version-command: |
            cat VERSION

      - name: Increment tag version
        uses: christian-draeger/increment-semantic-version@1.0.2
        id: bump_version
        with:
          current-version: ${{ steps.tag_version.outputs.current-version }}
          version-fragment: ${{ steps.regex-match.outputs.group1 }}

      - name: Update version in VERSION file
        run: |
          echo ${{ steps.bump_version.outputs.next-version }} > VERSION

      - name: Update package.json version
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: version
          value: ${{ steps.bump_version.outputs.next-version }}



      - name: Get JSON Property
        id: download_version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'system.json'
          prop_path: 'download'
          
      - name: Update system.json version
        uses: jossef/action-set-json-field@v1
        with:
          file: system.json
          field: version
          value: ${{format('https://github.com/Shaf074/shazhack/releases/download/{0}/shazhack-main.zip', { steps.bump_version.outputs.next-version })}}

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --recurse-paths shazhack-main *

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version.outputs.next-version }}
          release_name: Release ${{ steps.bump_version.outputs.next-version }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./shazhack-main.zip
          asset_name: shazhack-main.zip
          asset_content_type: application/zip
